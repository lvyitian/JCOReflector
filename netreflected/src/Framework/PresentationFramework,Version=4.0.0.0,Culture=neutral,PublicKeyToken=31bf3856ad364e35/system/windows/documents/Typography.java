/*
 *  MIT License
 *
 *  Copyright (c) 2020 MASES s.r.l.
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 */

/**************************************************************************************
 * <auto-generated>
 *      This code was generated from a template using JCOReflector version 1.0.0.0
 * 
 *      Manual changes to this file may cause unexpected behavior in your application.
 *      Manual changes to this file will be overwritten if the code is regenerated.
 * </auto-generated>
 *************************************************************************************/

package system.windows.documents;

import org.mases.jcobridge.*;
import org.mases.jcobridge.netreflection.*;
import java.util.ArrayList;

// Import section
import system.windows.DependencyObject;
import system.windows.FontFraction;
import system.windows.FontVariants;
import system.windows.FontCapitals;
import system.windows.FontNumeralStyle;
import system.windows.FontNumeralAlignment;
import system.windows.FontEastAsianWidths;
import system.windows.FontEastAsianLanguage;


/**
 * The base .NET class managing System.Windows.Documents.Typography, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35. Extends {@link NetObject}.
 */
public class Typography extends NetObject  {
    public static final String assemblyFullName = "PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35";
	public static final String assemblyShortName = "PresentationFramework";
    public static final String className = "System.Windows.Documents.Typography";
    static JCOBridge bridge = JCOBridgeInstance.getInstance(assemblyFullName);
    public static JCType classType = createType();
    static JCEnum enumInstance = null;
    JCObject classInstance = null;

    static JCType createType() {
        try {
            return bridge.GetType(className + ", " + (JCOBridgeInstance.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName));
        } catch (JCException e) {
            return null;
        }
    }

    void addReference(String ref) throws Throwable {
        try {
            bridge.AddReference(ref);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public Typography(Object instance) throws Throwable {
        if (instance instanceof JCObject) {
            classInstance = (JCObject) instance;
        } else
            throw new Exception("Cannot manage object, it is not a JCObject");
    }

    public String getJCOAssemblyName() {
        return assemblyFullName;
    }

    public String getJCOClassName() {
        return className;
    }

    public String getJCOObjectName() {
        return className + ", " + (JCOBridgeInstance.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
    }

    public Object getJCOInstance() {
        return classInstance;
    }

    public JCType getJCOType() {
        return classType;
    }

    public static Typography castFrom(IJCOBridgeReflected from) throws Throwable {
        return new Typography(from.getJCOInstance());
    }

    // Constructors section
    
    
    
    // Methods section
    
    
    public static boolean GetStandardLigatures(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            return (boolean)classType.Invoke("GetStandardLigatures", (Object)element.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean GetContextualLigatures(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            return (boolean)classType.Invoke("GetContextualLigatures", (Object)element.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean GetDiscretionaryLigatures(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            return (boolean)classType.Invoke("GetDiscretionaryLigatures", (Object)element.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean GetHistoricalLigatures(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            return (boolean)classType.Invoke("GetHistoricalLigatures", (Object)element.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetAnnotationAlternates(DependencyObject element, int value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetAnnotationAlternates", (Object)element.getJCOInstance(), value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int GetAnnotationAlternates(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            return (int)classType.Invoke("GetAnnotationAlternates", (Object)element.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean GetContextualAlternates(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            return (boolean)classType.Invoke("GetContextualAlternates", (Object)element.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean GetHistoricalForms(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            return (boolean)classType.Invoke("GetHistoricalForms", (Object)element.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean GetKerning(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            return (boolean)classType.Invoke("GetKerning", (Object)element.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean GetCapitalSpacing(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            return (boolean)classType.Invoke("GetCapitalSpacing", (Object)element.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean GetCaseSensitiveForms(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            return (boolean)classType.Invoke("GetCaseSensitiveForms", (Object)element.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean GetStylisticSet1(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            return (boolean)classType.Invoke("GetStylisticSet1", (Object)element.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean GetStylisticSet2(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            return (boolean)classType.Invoke("GetStylisticSet2", (Object)element.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean GetStylisticSet3(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            return (boolean)classType.Invoke("GetStylisticSet3", (Object)element.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean GetStylisticSet4(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            return (boolean)classType.Invoke("GetStylisticSet4", (Object)element.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean GetStylisticSet5(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            return (boolean)classType.Invoke("GetStylisticSet5", (Object)element.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean GetStylisticSet6(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            return (boolean)classType.Invoke("GetStylisticSet6", (Object)element.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean GetStylisticSet7(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            return (boolean)classType.Invoke("GetStylisticSet7", (Object)element.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean GetStylisticSet8(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            return (boolean)classType.Invoke("GetStylisticSet8", (Object)element.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean GetStylisticSet9(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            return (boolean)classType.Invoke("GetStylisticSet9", (Object)element.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean GetStylisticSet10(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            return (boolean)classType.Invoke("GetStylisticSet10", (Object)element.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean GetStylisticSet11(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            return (boolean)classType.Invoke("GetStylisticSet11", (Object)element.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean GetStylisticSet12(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            return (boolean)classType.Invoke("GetStylisticSet12", (Object)element.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean GetStylisticSet13(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            return (boolean)classType.Invoke("GetStylisticSet13", (Object)element.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean GetStylisticSet14(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            return (boolean)classType.Invoke("GetStylisticSet14", (Object)element.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean GetStylisticSet15(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            return (boolean)classType.Invoke("GetStylisticSet15", (Object)element.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean GetStylisticSet16(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            return (boolean)classType.Invoke("GetStylisticSet16", (Object)element.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean GetStylisticSet17(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            return (boolean)classType.Invoke("GetStylisticSet17", (Object)element.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean GetStylisticSet18(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            return (boolean)classType.Invoke("GetStylisticSet18", (Object)element.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean GetStylisticSet19(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            return (boolean)classType.Invoke("GetStylisticSet19", (Object)element.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean GetStylisticSet20(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            return (boolean)classType.Invoke("GetStylisticSet20", (Object)element.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetFraction(DependencyObject element, FontFraction value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetFraction", (Object)element.getJCOInstance(), (Object)value.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static FontFraction GetFraction(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objGetFraction = (JCObject)classType.Invoke("GetFraction", (Object)element.getJCOInstance());
            return new FontFraction(objGetFraction);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean GetSlashedZero(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            return (boolean)classType.Invoke("GetSlashedZero", (Object)element.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean GetMathematicalGreek(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            return (boolean)classType.Invoke("GetMathematicalGreek", (Object)element.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean GetEastAsianExpertForms(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            return (boolean)classType.Invoke("GetEastAsianExpertForms", (Object)element.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetVariants(DependencyObject element, FontVariants value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetVariants", (Object)element.getJCOInstance(), (Object)value.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static FontVariants GetVariants(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objGetVariants = (JCObject)classType.Invoke("GetVariants", (Object)element.getJCOInstance());
            return new FontVariants(objGetVariants);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetCapitals(DependencyObject element, FontCapitals value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetCapitals", (Object)element.getJCOInstance(), (Object)value.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static FontCapitals GetCapitals(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objGetCapitals = (JCObject)classType.Invoke("GetCapitals", (Object)element.getJCOInstance());
            return new FontCapitals(objGetCapitals);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetNumeralStyle(DependencyObject element, FontNumeralStyle value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetNumeralStyle", (Object)element.getJCOInstance(), (Object)value.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static FontNumeralStyle GetNumeralStyle(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objGetNumeralStyle = (JCObject)classType.Invoke("GetNumeralStyle", (Object)element.getJCOInstance());
            return new FontNumeralStyle(objGetNumeralStyle);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static FontNumeralAlignment GetNumeralAlignment(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objGetNumeralAlignment = (JCObject)classType.Invoke("GetNumeralAlignment", (Object)element.getJCOInstance());
            return new FontNumeralAlignment(objGetNumeralAlignment);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static FontEastAsianWidths GetEastAsianWidths(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objGetEastAsianWidths = (JCObject)classType.Invoke("GetEastAsianWidths", (Object)element.getJCOInstance());
            return new FontEastAsianWidths(objGetEastAsianWidths);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static FontEastAsianLanguage GetEastAsianLanguage(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objGetEastAsianLanguage = (JCObject)classType.Invoke("GetEastAsianLanguage", (Object)element.getJCOInstance());
            return new FontEastAsianLanguage(objGetEastAsianLanguage);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int GetStandardSwashes(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            return (int)classType.Invoke("GetStandardSwashes", (Object)element.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetContextualSwashes(DependencyObject element, int value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetContextualSwashes", (Object)element.getJCOInstance(), value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int GetContextualSwashes(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            return (int)classType.Invoke("GetContextualSwashes", (Object)element.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetStylisticAlternates(DependencyObject element, int value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetStylisticAlternates", (Object)element.getJCOInstance(), value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int GetStylisticAlternates(DependencyObject element) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            return (int)classType.Invoke("GetStylisticAlternates", (Object)element.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetHistoricalLigatures(DependencyObject element, boolean value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetHistoricalLigatures", (Object)element.getJCOInstance(), value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetContextualAlternates(DependencyObject element, boolean value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetContextualAlternates", (Object)element.getJCOInstance(), value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetCapitalSpacing(DependencyObject element, boolean value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetCapitalSpacing", (Object)element.getJCOInstance(), value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetMathematicalGreek(DependencyObject element, boolean value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetMathematicalGreek", (Object)element.getJCOInstance(), value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetNumeralAlignment(DependencyObject element, FontNumeralAlignment value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetNumeralAlignment", (Object)element.getJCOInstance(), (Object)value.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetEastAsianWidths(DependencyObject element, FontEastAsianWidths value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetEastAsianWidths", (Object)element.getJCOInstance(), (Object)value.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetEastAsianLanguage(DependencyObject element, FontEastAsianLanguage value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetEastAsianLanguage", (Object)element.getJCOInstance(), (Object)value.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetStandardSwashes(DependencyObject element, int value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetStandardSwashes", (Object)element.getJCOInstance(), value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetStandardLigatures(DependencyObject element, boolean value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetStandardLigatures", (Object)element.getJCOInstance(), value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetContextualLigatures(DependencyObject element, boolean value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetContextualLigatures", (Object)element.getJCOInstance(), value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetDiscretionaryLigatures(DependencyObject element, boolean value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetDiscretionaryLigatures", (Object)element.getJCOInstance(), value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetHistoricalForms(DependencyObject element, boolean value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetHistoricalForms", (Object)element.getJCOInstance(), value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetKerning(DependencyObject element, boolean value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetKerning", (Object)element.getJCOInstance(), value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetCaseSensitiveForms(DependencyObject element, boolean value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetCaseSensitiveForms", (Object)element.getJCOInstance(), value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetStylisticSet1(DependencyObject element, boolean value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetStylisticSet1", (Object)element.getJCOInstance(), value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetStylisticSet2(DependencyObject element, boolean value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetStylisticSet2", (Object)element.getJCOInstance(), value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetStylisticSet3(DependencyObject element, boolean value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetStylisticSet3", (Object)element.getJCOInstance(), value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetStylisticSet4(DependencyObject element, boolean value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetStylisticSet4", (Object)element.getJCOInstance(), value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetStylisticSet5(DependencyObject element, boolean value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetStylisticSet5", (Object)element.getJCOInstance(), value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetStylisticSet6(DependencyObject element, boolean value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetStylisticSet6", (Object)element.getJCOInstance(), value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetStylisticSet7(DependencyObject element, boolean value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetStylisticSet7", (Object)element.getJCOInstance(), value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetStylisticSet8(DependencyObject element, boolean value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetStylisticSet8", (Object)element.getJCOInstance(), value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetStylisticSet9(DependencyObject element, boolean value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetStylisticSet9", (Object)element.getJCOInstance(), value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetStylisticSet10(DependencyObject element, boolean value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetStylisticSet10", (Object)element.getJCOInstance(), value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetStylisticSet11(DependencyObject element, boolean value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetStylisticSet11", (Object)element.getJCOInstance(), value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetStylisticSet12(DependencyObject element, boolean value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetStylisticSet12", (Object)element.getJCOInstance(), value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetStylisticSet13(DependencyObject element, boolean value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetStylisticSet13", (Object)element.getJCOInstance(), value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetStylisticSet14(DependencyObject element, boolean value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetStylisticSet14", (Object)element.getJCOInstance(), value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetStylisticSet15(DependencyObject element, boolean value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetStylisticSet15", (Object)element.getJCOInstance(), value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetStylisticSet16(DependencyObject element, boolean value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetStylisticSet16", (Object)element.getJCOInstance(), value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetStylisticSet17(DependencyObject element, boolean value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetStylisticSet17", (Object)element.getJCOInstance(), value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetStylisticSet18(DependencyObject element, boolean value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetStylisticSet18", (Object)element.getJCOInstance(), value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetStylisticSet19(DependencyObject element, boolean value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetStylisticSet19", (Object)element.getJCOInstance(), value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetStylisticSet20(DependencyObject element, boolean value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetStylisticSet20", (Object)element.getJCOInstance(), value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetSlashedZero(DependencyObject element, boolean value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetSlashedZero", (Object)element.getJCOInstance(), value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetEastAsianExpertForms(DependencyObject element, boolean value) throws Throwable, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentException, system.ArgumentOutOfRangeException, system.NotSupportedException {
        try {
            classType.Invoke("SetEastAsianExpertForms", (Object)element.getJCOInstance(), value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }


    
    // Properties section
    
    
    public boolean getStandardLigatures() throws Throwable {
        try {
            return (boolean)classInstance.Get("StandardLigatures");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setStandardLigatures(boolean StandardLigatures) throws Throwable {
        try {
            classInstance.Set("StandardLigatures", StandardLigatures);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean getContextualLigatures() throws Throwable {
        try {
            return (boolean)classInstance.Get("ContextualLigatures");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setContextualLigatures(boolean ContextualLigatures) throws Throwable {
        try {
            classInstance.Set("ContextualLigatures", ContextualLigatures);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean getDiscretionaryLigatures() throws Throwable {
        try {
            return (boolean)classInstance.Get("DiscretionaryLigatures");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setDiscretionaryLigatures(boolean DiscretionaryLigatures) throws Throwable {
        try {
            classInstance.Set("DiscretionaryLigatures", DiscretionaryLigatures);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean getHistoricalLigatures() throws Throwable {
        try {
            return (boolean)classInstance.Get("HistoricalLigatures");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setHistoricalLigatures(boolean HistoricalLigatures) throws Throwable {
        try {
            classInstance.Set("HistoricalLigatures", HistoricalLigatures);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public int getAnnotationAlternates() throws Throwable {
        try {
            return (int)classInstance.Get("AnnotationAlternates");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setAnnotationAlternates(int AnnotationAlternates) throws Throwable {
        try {
            classInstance.Set("AnnotationAlternates", AnnotationAlternates);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean getContextualAlternates() throws Throwable {
        try {
            return (boolean)classInstance.Get("ContextualAlternates");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setContextualAlternates(boolean ContextualAlternates) throws Throwable {
        try {
            classInstance.Set("ContextualAlternates", ContextualAlternates);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean getHistoricalForms() throws Throwable {
        try {
            return (boolean)classInstance.Get("HistoricalForms");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setHistoricalForms(boolean HistoricalForms) throws Throwable {
        try {
            classInstance.Set("HistoricalForms", HistoricalForms);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean getKerning() throws Throwable {
        try {
            return (boolean)classInstance.Get("Kerning");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setKerning(boolean Kerning) throws Throwable {
        try {
            classInstance.Set("Kerning", Kerning);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean getCapitalSpacing() throws Throwable {
        try {
            return (boolean)classInstance.Get("CapitalSpacing");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setCapitalSpacing(boolean CapitalSpacing) throws Throwable {
        try {
            classInstance.Set("CapitalSpacing", CapitalSpacing);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean getCaseSensitiveForms() throws Throwable {
        try {
            return (boolean)classInstance.Get("CaseSensitiveForms");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setCaseSensitiveForms(boolean CaseSensitiveForms) throws Throwable {
        try {
            classInstance.Set("CaseSensitiveForms", CaseSensitiveForms);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean getStylisticSet1() throws Throwable {
        try {
            return (boolean)classInstance.Get("StylisticSet1");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setStylisticSet1(boolean StylisticSet1) throws Throwable {
        try {
            classInstance.Set("StylisticSet1", StylisticSet1);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean getStylisticSet2() throws Throwable {
        try {
            return (boolean)classInstance.Get("StylisticSet2");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setStylisticSet2(boolean StylisticSet2) throws Throwable {
        try {
            classInstance.Set("StylisticSet2", StylisticSet2);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean getStylisticSet3() throws Throwable {
        try {
            return (boolean)classInstance.Get("StylisticSet3");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setStylisticSet3(boolean StylisticSet3) throws Throwable {
        try {
            classInstance.Set("StylisticSet3", StylisticSet3);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean getStylisticSet4() throws Throwable {
        try {
            return (boolean)classInstance.Get("StylisticSet4");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setStylisticSet4(boolean StylisticSet4) throws Throwable {
        try {
            classInstance.Set("StylisticSet4", StylisticSet4);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean getStylisticSet5() throws Throwable {
        try {
            return (boolean)classInstance.Get("StylisticSet5");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setStylisticSet5(boolean StylisticSet5) throws Throwable {
        try {
            classInstance.Set("StylisticSet5", StylisticSet5);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean getStylisticSet6() throws Throwable {
        try {
            return (boolean)classInstance.Get("StylisticSet6");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setStylisticSet6(boolean StylisticSet6) throws Throwable {
        try {
            classInstance.Set("StylisticSet6", StylisticSet6);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean getStylisticSet7() throws Throwable {
        try {
            return (boolean)classInstance.Get("StylisticSet7");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setStylisticSet7(boolean StylisticSet7) throws Throwable {
        try {
            classInstance.Set("StylisticSet7", StylisticSet7);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean getStylisticSet8() throws Throwable {
        try {
            return (boolean)classInstance.Get("StylisticSet8");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setStylisticSet8(boolean StylisticSet8) throws Throwable {
        try {
            classInstance.Set("StylisticSet8", StylisticSet8);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean getStylisticSet9() throws Throwable {
        try {
            return (boolean)classInstance.Get("StylisticSet9");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setStylisticSet9(boolean StylisticSet9) throws Throwable {
        try {
            classInstance.Set("StylisticSet9", StylisticSet9);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean getStylisticSet10() throws Throwable {
        try {
            return (boolean)classInstance.Get("StylisticSet10");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setStylisticSet10(boolean StylisticSet10) throws Throwable {
        try {
            classInstance.Set("StylisticSet10", StylisticSet10);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean getStylisticSet11() throws Throwable {
        try {
            return (boolean)classInstance.Get("StylisticSet11");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setStylisticSet11(boolean StylisticSet11) throws Throwable {
        try {
            classInstance.Set("StylisticSet11", StylisticSet11);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean getStylisticSet12() throws Throwable {
        try {
            return (boolean)classInstance.Get("StylisticSet12");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setStylisticSet12(boolean StylisticSet12) throws Throwable {
        try {
            classInstance.Set("StylisticSet12", StylisticSet12);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean getStylisticSet13() throws Throwable {
        try {
            return (boolean)classInstance.Get("StylisticSet13");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setStylisticSet13(boolean StylisticSet13) throws Throwable {
        try {
            classInstance.Set("StylisticSet13", StylisticSet13);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean getStylisticSet14() throws Throwable {
        try {
            return (boolean)classInstance.Get("StylisticSet14");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setStylisticSet14(boolean StylisticSet14) throws Throwable {
        try {
            classInstance.Set("StylisticSet14", StylisticSet14);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean getStylisticSet15() throws Throwable {
        try {
            return (boolean)classInstance.Get("StylisticSet15");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setStylisticSet15(boolean StylisticSet15) throws Throwable {
        try {
            classInstance.Set("StylisticSet15", StylisticSet15);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean getStylisticSet16() throws Throwable {
        try {
            return (boolean)classInstance.Get("StylisticSet16");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setStylisticSet16(boolean StylisticSet16) throws Throwable {
        try {
            classInstance.Set("StylisticSet16", StylisticSet16);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean getStylisticSet17() throws Throwable {
        try {
            return (boolean)classInstance.Get("StylisticSet17");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setStylisticSet17(boolean StylisticSet17) throws Throwable {
        try {
            classInstance.Set("StylisticSet17", StylisticSet17);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean getStylisticSet18() throws Throwable {
        try {
            return (boolean)classInstance.Get("StylisticSet18");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setStylisticSet18(boolean StylisticSet18) throws Throwable {
        try {
            classInstance.Set("StylisticSet18", StylisticSet18);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean getStylisticSet19() throws Throwable {
        try {
            return (boolean)classInstance.Get("StylisticSet19");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setStylisticSet19(boolean StylisticSet19) throws Throwable {
        try {
            classInstance.Set("StylisticSet19", StylisticSet19);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean getStylisticSet20() throws Throwable {
        try {
            return (boolean)classInstance.Get("StylisticSet20");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setStylisticSet20(boolean StylisticSet20) throws Throwable {
        try {
            classInstance.Set("StylisticSet20", StylisticSet20);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public FontFraction getFraction() throws Throwable {
        try {
            JCObject val = (JCObject)classInstance.Get("Fraction");
            return new FontFraction(val);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setFraction(FontFraction Fraction) throws Throwable {
        try {
            classInstance.Set("Fraction", (Object)Fraction.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean getSlashedZero() throws Throwable {
        try {
            return (boolean)classInstance.Get("SlashedZero");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setSlashedZero(boolean SlashedZero) throws Throwable {
        try {
            classInstance.Set("SlashedZero", SlashedZero);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean getMathematicalGreek() throws Throwable {
        try {
            return (boolean)classInstance.Get("MathematicalGreek");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setMathematicalGreek(boolean MathematicalGreek) throws Throwable {
        try {
            classInstance.Set("MathematicalGreek", MathematicalGreek);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean getEastAsianExpertForms() throws Throwable {
        try {
            return (boolean)classInstance.Get("EastAsianExpertForms");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setEastAsianExpertForms(boolean EastAsianExpertForms) throws Throwable {
        try {
            classInstance.Set("EastAsianExpertForms", EastAsianExpertForms);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public FontVariants getVariants() throws Throwable {
        try {
            JCObject val = (JCObject)classInstance.Get("Variants");
            return new FontVariants(val);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setVariants(FontVariants Variants) throws Throwable {
        try {
            classInstance.Set("Variants", (Object)Variants.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public FontCapitals getCapitals() throws Throwable {
        try {
            JCObject val = (JCObject)classInstance.Get("Capitals");
            return new FontCapitals(val);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setCapitals(FontCapitals Capitals) throws Throwable {
        try {
            classInstance.Set("Capitals", (Object)Capitals.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public FontNumeralStyle getNumeralStyle() throws Throwable {
        try {
            JCObject val = (JCObject)classInstance.Get("NumeralStyle");
            return new FontNumeralStyle(val);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setNumeralStyle(FontNumeralStyle NumeralStyle) throws Throwable {
        try {
            classInstance.Set("NumeralStyle", (Object)NumeralStyle.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public FontNumeralAlignment getNumeralAlignment() throws Throwable {
        try {
            JCObject val = (JCObject)classInstance.Get("NumeralAlignment");
            return new FontNumeralAlignment(val);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setNumeralAlignment(FontNumeralAlignment NumeralAlignment) throws Throwable {
        try {
            classInstance.Set("NumeralAlignment", (Object)NumeralAlignment.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public FontEastAsianWidths getEastAsianWidths() throws Throwable {
        try {
            JCObject val = (JCObject)classInstance.Get("EastAsianWidths");
            return new FontEastAsianWidths(val);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setEastAsianWidths(FontEastAsianWidths EastAsianWidths) throws Throwable {
        try {
            classInstance.Set("EastAsianWidths", (Object)EastAsianWidths.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public FontEastAsianLanguage getEastAsianLanguage() throws Throwable {
        try {
            JCObject val = (JCObject)classInstance.Get("EastAsianLanguage");
            return new FontEastAsianLanguage(val);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setEastAsianLanguage(FontEastAsianLanguage EastAsianLanguage) throws Throwable {
        try {
            classInstance.Set("EastAsianLanguage", (Object)EastAsianLanguage.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public int getStandardSwashes() throws Throwable {
        try {
            return (int)classInstance.Get("StandardSwashes");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setStandardSwashes(int StandardSwashes) throws Throwable {
        try {
            classInstance.Set("StandardSwashes", StandardSwashes);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public int getContextualSwashes() throws Throwable {
        try {
            return (int)classInstance.Get("ContextualSwashes");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setContextualSwashes(int ContextualSwashes) throws Throwable {
        try {
            classInstance.Set("ContextualSwashes", ContextualSwashes);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public int getStylisticAlternates() throws Throwable {
        try {
            return (int)classInstance.Get("StylisticAlternates");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void setStylisticAlternates(int StylisticAlternates) throws Throwable {
        try {
            classInstance.Set("StylisticAlternates", StylisticAlternates);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }



	// Instance Events section
    
    
}