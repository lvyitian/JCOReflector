/*
 *  MIT License
 *
 *  Copyright (c) 2020 MASES s.r.l.
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 */

/**************************************************************************************
 * <auto-generated>
 *      This code was generated from a template using JCOReflector version 1.0.0.0
 * 
 *      Manual changes to this file may cause unexpected behavior in your application.
 *      Manual changes to this file will be overwritten if the code is regenerated.
 * </auto-generated>
 *************************************************************************************/

package system.linq.expressions;

import org.mases.jcobridge.*;
import org.mases.jcobridge.netreflection.*;
import java.util.ArrayList;

// Import section
import system.linq.expressions.BinaryExpression;
import system.linq.expressions.ExpressionType;
import system.linq.expressions.Expression;
import system.reflection.MethodInfo;
import system.linq.expressions.LambdaExpression;
import system.linq.expressions.BlockExpression;
import system.linq.expressions.CatchBlock;
import system.linq.expressions.ParameterExpression;
import system.linq.expressions.ConditionalExpression;
import system.linq.expressions.ConstantExpression;
import system.linq.expressions.DebugInfoExpression;
import system.linq.expressions.SymbolDocumentInfo;
import system.linq.expressions.DefaultExpression;
import system.linq.expressions.DynamicExpression;
import system.runtime.compilerservices.CallSiteBinder;
import system.linq.expressions.ElementInit;
import system.linq.expressions.GotoExpression;
import system.linq.expressions.LabelTarget;
import system.linq.expressions.IndexExpression;
import system.reflection.PropertyInfo;
import system.linq.expressions.InvocationExpression;
import system.linq.expressions.LabelExpression;
import system.linq.expressions.ListInitExpression;
import system.linq.expressions.NewExpression;
import system.linq.expressions.LoopExpression;
import system.linq.expressions.MemberAssignment;
import system.linq.expressions.MemberExpression;
import system.reflection.MemberInfo;
import system.linq.expressions.MemberInitExpression;
import system.linq.expressions.MemberBinding;
import system.linq.expressions.MemberListBinding;
import system.linq.expressions.MemberMemberBinding;
import system.linq.expressions.MethodCallExpression;
import system.linq.expressions.NewArrayExpression;
import system.reflection.ConstructorInfo;
import system.linq.expressions.RuntimeVariablesExpression;
import system.linq.expressions.SwitchCase;
import system.linq.expressions.SwitchExpression;
import system.Guid;
import system.linq.expressions.TryExpression;
import system.linq.expressions.UnaryExpression;
import system.linq.expressions.GotoExpressionKind;
import system.linq.expressions.TypeBinaryExpression;
import system.reflection.FieldInfo;


/**
 * The base .NET class managing System.Linq.Expressions.Expression, System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089. Extends {@link NetObject}.
 */
public class Expression extends NetObject  {
    public static final String assemblyFullName = "System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089";
	public static final String assemblyShortName = "System.Core";
    public static final String className = "System.Linq.Expressions.Expression";
    static JCOBridge bridge = JCOBridgeInstance.getInstance(assemblyFullName);
    public static JCType classType = createType();
    static JCEnum enumInstance = null;
    JCObject classInstance = null;

    static JCType createType() {
        try {
            return bridge.GetType(className + ", " + (JCOBridgeInstance.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName));
        } catch (JCException e) {
            return null;
        }
    }

    void addReference(String ref) throws Throwable {
        try {
            bridge.AddReference(ref);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public Expression(Object instance) throws Throwable {
        if (instance instanceof JCObject) {
            classInstance = (JCObject) instance;
        } else
            throw new Exception("Cannot manage object, it is not a JCObject");
    }

    public String getJCOAssemblyName() {
        return assemblyFullName;
    }

    public String getJCOClassName() {
        return className;
    }

    public String getJCOObjectName() {
        return className + ", " + (JCOBridgeInstance.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
    }

    public Object getJCOInstance() {
        return classInstance;
    }

    public JCType getJCOType() {
        return classType;
    }

    public static Expression castFrom(IJCOBridgeReflected from) throws Throwable {
        return new Expression(from.getJCOInstance());
    }

    // Constructors section
    
    
    
    // Methods section
    
    
    public static BinaryExpression MakeBinary(ExpressionType binaryType, Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objMakeBinary = (JCObject)classType.Invoke("MakeBinary", (Object)binaryType.getJCOInstance(), (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objMakeBinary);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression MakeBinary(ExpressionType binaryType, Expression left, Expression right, boolean liftToNull, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objMakeBinary = (JCObject)classType.Invoke("MakeBinary", (Object)binaryType.getJCOInstance(), (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), liftToNull, (Object)method.getJCOInstance());
            return new BinaryExpression(objMakeBinary);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression MakeBinary(ExpressionType binaryType, Expression left, Expression right, boolean liftToNull, MethodInfo method, LambdaExpression conversion) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objMakeBinary = (JCObject)classType.Invoke("MakeBinary", (Object)binaryType.getJCOInstance(), (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), liftToNull, (Object)method.getJCOInstance(), (Object)conversion.getJCOInstance());
            return new BinaryExpression(objMakeBinary);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression Equal(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objEqual = (JCObject)classType.Invoke("Equal", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objEqual);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression NotEqual(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objNotEqual = (JCObject)classType.Invoke("NotEqual", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objNotEqual);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression GreaterThan(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objGreaterThan = (JCObject)classType.Invoke("GreaterThan", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objGreaterThan);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression LessThan(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objLessThan = (JCObject)classType.Invoke("LessThan", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objLessThan);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression GreaterThanOrEqual(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objGreaterThanOrEqual = (JCObject)classType.Invoke("GreaterThanOrEqual", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objGreaterThanOrEqual);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression LessThanOrEqual(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objLessThanOrEqual = (JCObject)classType.Invoke("LessThanOrEqual", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objLessThanOrEqual);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression AndAlso(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objAndAlso = (JCObject)classType.Invoke("AndAlso", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objAndAlso);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression OrElse(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objOrElse = (JCObject)classType.Invoke("OrElse", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objOrElse);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression Coalesce(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objCoalesce = (JCObject)classType.Invoke("Coalesce", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objCoalesce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression Add(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objAdd = (JCObject)classType.Invoke("Add", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objAdd);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression AddAssign(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objAddAssign = (JCObject)classType.Invoke("AddAssign", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objAddAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression AddAssign(Expression left, Expression right, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objAddAssign = (JCObject)classType.Invoke("AddAssign", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance());
            return new BinaryExpression(objAddAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression AddAssignChecked(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objAddAssignChecked = (JCObject)classType.Invoke("AddAssignChecked", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objAddAssignChecked);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression AddAssignChecked(Expression left, Expression right, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objAddAssignChecked = (JCObject)classType.Invoke("AddAssignChecked", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance());
            return new BinaryExpression(objAddAssignChecked);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression AddChecked(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objAddChecked = (JCObject)classType.Invoke("AddChecked", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objAddChecked);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression Subtract(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objSubtract = (JCObject)classType.Invoke("Subtract", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objSubtract);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression SubtractAssign(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objSubtractAssign = (JCObject)classType.Invoke("SubtractAssign", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objSubtractAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression SubtractAssign(Expression left, Expression right, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objSubtractAssign = (JCObject)classType.Invoke("SubtractAssign", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance());
            return new BinaryExpression(objSubtractAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression SubtractAssignChecked(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objSubtractAssignChecked = (JCObject)classType.Invoke("SubtractAssignChecked", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objSubtractAssignChecked);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression SubtractAssignChecked(Expression left, Expression right, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objSubtractAssignChecked = (JCObject)classType.Invoke("SubtractAssignChecked", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance());
            return new BinaryExpression(objSubtractAssignChecked);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression SubtractChecked(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objSubtractChecked = (JCObject)classType.Invoke("SubtractChecked", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objSubtractChecked);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression Divide(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objDivide = (JCObject)classType.Invoke("Divide", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objDivide);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression DivideAssign(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objDivideAssign = (JCObject)classType.Invoke("DivideAssign", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objDivideAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression DivideAssign(Expression left, Expression right, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objDivideAssign = (JCObject)classType.Invoke("DivideAssign", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance());
            return new BinaryExpression(objDivideAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression Modulo(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objModulo = (JCObject)classType.Invoke("Modulo", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objModulo);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression ModuloAssign(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objModuloAssign = (JCObject)classType.Invoke("ModuloAssign", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objModuloAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression ModuloAssign(Expression left, Expression right, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objModuloAssign = (JCObject)classType.Invoke("ModuloAssign", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance());
            return new BinaryExpression(objModuloAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression Multiply(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objMultiply = (JCObject)classType.Invoke("Multiply", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objMultiply);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression MultiplyAssign(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objMultiplyAssign = (JCObject)classType.Invoke("MultiplyAssign", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objMultiplyAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression MultiplyAssign(Expression left, Expression right, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objMultiplyAssign = (JCObject)classType.Invoke("MultiplyAssign", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance());
            return new BinaryExpression(objMultiplyAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression MultiplyAssignChecked(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objMultiplyAssignChecked = (JCObject)classType.Invoke("MultiplyAssignChecked", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objMultiplyAssignChecked);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression MultiplyAssignChecked(Expression left, Expression right, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objMultiplyAssignChecked = (JCObject)classType.Invoke("MultiplyAssignChecked", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance());
            return new BinaryExpression(objMultiplyAssignChecked);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression MultiplyChecked(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objMultiplyChecked = (JCObject)classType.Invoke("MultiplyChecked", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objMultiplyChecked);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression LeftShift(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objLeftShift = (JCObject)classType.Invoke("LeftShift", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objLeftShift);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression LeftShiftAssign(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objLeftShiftAssign = (JCObject)classType.Invoke("LeftShiftAssign", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objLeftShiftAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression LeftShiftAssign(Expression left, Expression right, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objLeftShiftAssign = (JCObject)classType.Invoke("LeftShiftAssign", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance());
            return new BinaryExpression(objLeftShiftAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression RightShift(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objRightShift = (JCObject)classType.Invoke("RightShift", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objRightShift);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression RightShiftAssign(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objRightShiftAssign = (JCObject)classType.Invoke("RightShiftAssign", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objRightShiftAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression RightShiftAssign(Expression left, Expression right, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objRightShiftAssign = (JCObject)classType.Invoke("RightShiftAssign", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance());
            return new BinaryExpression(objRightShiftAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression And(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objAnd = (JCObject)classType.Invoke("And", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objAnd);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression AndAssign(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objAndAssign = (JCObject)classType.Invoke("AndAssign", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objAndAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression AndAssign(Expression left, Expression right, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objAndAssign = (JCObject)classType.Invoke("AndAssign", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance());
            return new BinaryExpression(objAndAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression Or(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objOr = (JCObject)classType.Invoke("Or", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objOr);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression OrAssign(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objOrAssign = (JCObject)classType.Invoke("OrAssign", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objOrAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression OrAssign(Expression left, Expression right, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objOrAssign = (JCObject)classType.Invoke("OrAssign", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance());
            return new BinaryExpression(objOrAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression ExclusiveOr(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objExclusiveOr = (JCObject)classType.Invoke("ExclusiveOr", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objExclusiveOr);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression ExclusiveOrAssign(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objExclusiveOrAssign = (JCObject)classType.Invoke("ExclusiveOrAssign", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objExclusiveOrAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression ExclusiveOrAssign(Expression left, Expression right, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objExclusiveOrAssign = (JCObject)classType.Invoke("ExclusiveOrAssign", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance());
            return new BinaryExpression(objExclusiveOrAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression Power(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotImplementedException, system.NotSupportedException {
        try {
            JCObject objPower = (JCObject)classType.Invoke("Power", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objPower);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression PowerAssign(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotImplementedException, system.NotSupportedException {
        try {
            JCObject objPowerAssign = (JCObject)classType.Invoke("PowerAssign", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objPowerAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression PowerAssign(Expression left, Expression right, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotImplementedException, system.NotSupportedException {
        try {
            JCObject objPowerAssign = (JCObject)classType.Invoke("PowerAssign", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance());
            return new BinaryExpression(objPowerAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BlockExpression Block(NetType type, Expression... expressions) throws Throwable, system.ArgumentNullException, system.ArgumentOutOfRangeException, system.ArgumentException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException {
        try {
            JCObject objBlock = (JCObject)classType.Invoke("Block", (Object)type.getJCOInstance(), (Object[])toObjectFromArray(expressions));
            return new BlockExpression(objBlock);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static CatchBlock Catch(NetType type, Expression body) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException {
        try {
            JCObject objCatch = (JCObject)classType.Invoke("Catch", (Object)type.getJCOInstance(), (Object)body.getJCOInstance());
            return new CatchBlock(objCatch);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static CatchBlock Catch(ParameterExpression variable, Expression body) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.NotImplementedException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.FormatException {
        try {
            JCObject objCatch = (JCObject)classType.Invoke("Catch", (Object)variable.getJCOInstance(), (Object)body.getJCOInstance());
            return new CatchBlock(objCatch);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static CatchBlock Catch(NetType type, Expression body, Expression filter) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException {
        try {
            JCObject objCatch = (JCObject)classType.Invoke("Catch", (Object)type.getJCOInstance(), (Object)body.getJCOInstance(), (Object)filter.getJCOInstance());
            return new CatchBlock(objCatch);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static CatchBlock Catch(ParameterExpression variable, Expression body, Expression filter) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.NotImplementedException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.FormatException {
        try {
            JCObject objCatch = (JCObject)classType.Invoke("Catch", (Object)variable.getJCOInstance(), (Object)body.getJCOInstance(), (Object)filter.getJCOInstance());
            return new CatchBlock(objCatch);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ConditionalExpression IfThen(Expression test, Expression ifTrue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException {
        try {
            JCObject objIfThen = (JCObject)classType.Invoke("IfThen", (Object)test.getJCOInstance(), (Object)ifTrue.getJCOInstance());
            return new ConditionalExpression(objIfThen);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ConditionalExpression IfThenElse(Expression test, Expression ifTrue, Expression ifFalse) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException {
        try {
            JCObject objIfThenElse = (JCObject)classType.Invoke("IfThenElse", (Object)test.getJCOInstance(), (Object)ifTrue.getJCOInstance(), (Object)ifFalse.getJCOInstance());
            return new ConditionalExpression(objIfThenElse);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ConstantExpression Constant(NetObject value) throws Throwable {
        try {
            JCObject objConstant = (JCObject)classType.Invoke("Constant", (Object)value.getJCOInstance());
            return new ConstantExpression(objConstant);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ConstantExpression Constant(NetObject value, NetType type) throws Throwable, system.ArgumentNullException, system.NotSupportedException, system.ArgumentException, system.NotImplementedException, system.globalization.CultureNotFoundException, system.IndexOutOfRangeException, system.ArgumentOutOfRangeException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException {
        try {
            JCObject objConstant = (JCObject)classType.Invoke("Constant", (Object)value.getJCOInstance(), (Object)type.getJCOInstance());
            return new ConstantExpression(objConstant);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DebugInfoExpression DebugInfo(SymbolDocumentInfo document, int startLine, int startColumn, int endLine, int endColumn) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.NotImplementedException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.FormatException {
        try {
            JCObject objDebugInfo = (JCObject)classType.Invoke("DebugInfo", (Object)document.getJCOInstance(), startLine, startColumn, endLine, endColumn);
            return new DebugInfoExpression(objDebugInfo);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DebugInfoExpression ClearDebugInfo(SymbolDocumentInfo document) throws Throwable, system.ArgumentNullException {
        try {
            JCObject objClearDebugInfo = (JCObject)classType.Invoke("ClearDebugInfo", (Object)document.getJCOInstance());
            return new DebugInfoExpression(objClearDebugInfo);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DefaultExpression Empty() throws Throwable {
        try {
            JCObject objEmpty = (JCObject)classType.Invoke("Empty");
            return new DefaultExpression(objEmpty);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DefaultExpression Default(NetType type) throws Throwable {
        try {
            JCObject objDefault = (JCObject)classType.Invoke("Default", (Object)type.getJCOInstance());
            return new DefaultExpression(objDefault);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DynamicExpression MakeDynamic(NetType delegateType, CallSiteBinder binder, Expression... arguments) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.NotImplementedException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.NotSupportedException, system.ArgumentOutOfRangeException, system.FormatException {
        try {
            JCObject objMakeDynamic = (JCObject)classType.Invoke("MakeDynamic", (Object)delegateType.getJCOInstance(), (Object)binder.getJCOInstance(), (Object[])toObjectFromArray(arguments));
            return new DynamicExpression(objMakeDynamic);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DynamicExpression MakeDynamic(NetType delegateType, CallSiteBinder binder, Expression arg0) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.NotImplementedException, system.globalization.CultureNotFoundException, system.IndexOutOfRangeException, system.ArgumentOutOfRangeException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.NotSupportedException {
        try {
            JCObject objMakeDynamic = (JCObject)classType.Invoke("MakeDynamic", (Object)delegateType.getJCOInstance(), (Object)binder.getJCOInstance(), (Object)arg0.getJCOInstance());
            return new DynamicExpression(objMakeDynamic);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DynamicExpression MakeDynamic(NetType delegateType, CallSiteBinder binder, Expression arg0, Expression arg1) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.NotImplementedException, system.globalization.CultureNotFoundException, system.IndexOutOfRangeException, system.ArgumentOutOfRangeException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.NotSupportedException {
        try {
            JCObject objMakeDynamic = (JCObject)classType.Invoke("MakeDynamic", (Object)delegateType.getJCOInstance(), (Object)binder.getJCOInstance(), (Object)arg0.getJCOInstance(), (Object)arg1.getJCOInstance());
            return new DynamicExpression(objMakeDynamic);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DynamicExpression MakeDynamic(NetType delegateType, CallSiteBinder binder, Expression arg0, Expression arg1, Expression arg2) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.NotImplementedException, system.globalization.CultureNotFoundException, system.IndexOutOfRangeException, system.ArgumentOutOfRangeException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.NotSupportedException {
        try {
            JCObject objMakeDynamic = (JCObject)classType.Invoke("MakeDynamic", (Object)delegateType.getJCOInstance(), (Object)binder.getJCOInstance(), (Object)arg0.getJCOInstance(), (Object)arg1.getJCOInstance(), (Object)arg2.getJCOInstance());
            return new DynamicExpression(objMakeDynamic);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DynamicExpression MakeDynamic(NetType delegateType, CallSiteBinder binder, Expression arg0, Expression arg1, Expression arg2, Expression arg3) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.NotImplementedException, system.globalization.CultureNotFoundException, system.IndexOutOfRangeException, system.ArgumentOutOfRangeException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.NotSupportedException {
        try {
            JCObject objMakeDynamic = (JCObject)classType.Invoke("MakeDynamic", (Object)delegateType.getJCOInstance(), (Object)binder.getJCOInstance(), (Object)arg0.getJCOInstance(), (Object)arg1.getJCOInstance(), (Object)arg2.getJCOInstance(), (Object)arg3.getJCOInstance());
            return new DynamicExpression(objMakeDynamic);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DynamicExpression Dynamic(CallSiteBinder binder, NetType returnType, Expression... arguments) throws Throwable, system.ArgumentNullException, system.ArgumentOutOfRangeException, system.ArgumentException, system.NotImplementedException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.NotSupportedException {
        try {
            JCObject objDynamic = (JCObject)classType.Invoke("Dynamic", (Object)binder.getJCOInstance(), (Object)returnType.getJCOInstance(), (Object[])toObjectFromArray(arguments));
            return new DynamicExpression(objDynamic);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ElementInit ElementInit(MethodInfo addMethod, Expression... arguments) throws Throwable, system.ArgumentNullException, system.ArgumentOutOfRangeException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.IndexOutOfRangeException, system.NotSupportedException, system.ObjectDisposedException, system.globalization.CultureNotFoundException {
        try {
            JCObject objElementInit = (JCObject)classType.Invoke("ElementInit", (Object)addMethod.getJCOInstance(), (Object[])toObjectFromArray(arguments));
            return new ElementInit(objElementInit);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public Expression Reduce() throws Throwable, system.ArgumentNullException, system.ArgumentException, system.NotImplementedException, system.globalization.CultureNotFoundException, system.IndexOutOfRangeException, system.ArgumentOutOfRangeException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException {
        try {
            JCObject objReduce = (JCObject)classInstance.Invoke("Reduce");
            return new Expression(objReduce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public Expression ReduceAndCheck() throws Throwable, system.ArgumentNullException, system.ArgumentException, system.NotImplementedException, system.globalization.CultureNotFoundException, system.IndexOutOfRangeException, system.ArgumentOutOfRangeException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException {
        try {
            JCObject objReduceAndCheck = (JCObject)classInstance.Invoke("ReduceAndCheck");
            return new Expression(objReduceAndCheck);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public Expression ReduceExtensions() throws Throwable, system.ArgumentNullException, system.ArgumentException, system.NotImplementedException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.FormatException {
        try {
            JCObject objReduceExtensions = (JCObject)classInstance.Invoke("ReduceExtensions");
            return new Expression(objReduceExtensions);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static GotoExpression Break(LabelTarget target) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException {
        try {
            JCObject objBreak = (JCObject)classType.Invoke("Break", (Object)target.getJCOInstance());
            return new GotoExpression(objBreak);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static GotoExpression Break(LabelTarget target, Expression value) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException {
        try {
            JCObject objBreak = (JCObject)classType.Invoke("Break", (Object)target.getJCOInstance(), (Object)value.getJCOInstance());
            return new GotoExpression(objBreak);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static GotoExpression Break(LabelTarget target, NetType type) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException {
        try {
            JCObject objBreak = (JCObject)classType.Invoke("Break", (Object)target.getJCOInstance(), (Object)type.getJCOInstance());
            return new GotoExpression(objBreak);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static GotoExpression Break(LabelTarget target, Expression value, NetType type) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException {
        try {
            JCObject objBreak = (JCObject)classType.Invoke("Break", (Object)target.getJCOInstance(), (Object)value.getJCOInstance(), (Object)type.getJCOInstance());
            return new GotoExpression(objBreak);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static GotoExpression Continue(LabelTarget target) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException {
        try {
            JCObject objContinue = (JCObject)classType.Invoke("Continue", (Object)target.getJCOInstance());
            return new GotoExpression(objContinue);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static GotoExpression Continue(LabelTarget target, NetType type) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException {
        try {
            JCObject objContinue = (JCObject)classType.Invoke("Continue", (Object)target.getJCOInstance(), (Object)type.getJCOInstance());
            return new GotoExpression(objContinue);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static GotoExpression Return(LabelTarget target) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException {
        try {
            JCObject objReturn = (JCObject)classType.Invoke("Return", (Object)target.getJCOInstance());
            return new GotoExpression(objReturn);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static GotoExpression Return(LabelTarget target, NetType type) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException {
        try {
            JCObject objReturn = (JCObject)classType.Invoke("Return", (Object)target.getJCOInstance(), (Object)type.getJCOInstance());
            return new GotoExpression(objReturn);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static GotoExpression Return(LabelTarget target, Expression value) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException {
        try {
            JCObject objReturn = (JCObject)classType.Invoke("Return", (Object)target.getJCOInstance(), (Object)value.getJCOInstance());
            return new GotoExpression(objReturn);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static GotoExpression Return(LabelTarget target, Expression value, NetType type) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException {
        try {
            JCObject objReturn = (JCObject)classType.Invoke("Return", (Object)target.getJCOInstance(), (Object)value.getJCOInstance(), (Object)type.getJCOInstance());
            return new GotoExpression(objReturn);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static GotoExpression Goto(LabelTarget target) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException {
        try {
            JCObject objGoto = (JCObject)classType.Invoke("Goto", (Object)target.getJCOInstance());
            return new GotoExpression(objGoto);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static GotoExpression Goto(LabelTarget target, NetType type) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException {
        try {
            JCObject objGoto = (JCObject)classType.Invoke("Goto", (Object)target.getJCOInstance(), (Object)type.getJCOInstance());
            return new GotoExpression(objGoto);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static GotoExpression Goto(LabelTarget target, Expression value) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException {
        try {
            JCObject objGoto = (JCObject)classType.Invoke("Goto", (Object)target.getJCOInstance(), (Object)value.getJCOInstance());
            return new GotoExpression(objGoto);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static GotoExpression Goto(LabelTarget target, Expression value, NetType type) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException {
        try {
            JCObject objGoto = (JCObject)classType.Invoke("Goto", (Object)target.getJCOInstance(), (Object)value.getJCOInstance(), (Object)type.getJCOInstance());
            return new GotoExpression(objGoto);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static IndexExpression ArrayAccess(Expression array, Expression... indexes) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objArrayAccess = (JCObject)classType.Invoke("ArrayAccess", (Object)array.getJCOInstance(), (Object[])toObjectFromArray(indexes));
            return new IndexExpression(objArrayAccess);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static IndexExpression Property(Expression instance, PropertyInfo indexer, Expression... arguments) throws Throwable, system.ArgumentNullException, system.ArgumentOutOfRangeException, system.ArgumentException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException, system.NotSupportedException, system.IndexOutOfRangeException {
        try {
            JCObject objProperty = (JCObject)classType.Invoke("Property", (Object)instance.getJCOInstance(), (Object)indexer.getJCOInstance(), (Object[])toObjectFromArray(arguments));
            return new IndexExpression(objProperty);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static InvocationExpression Invoke(Expression expression, Expression... arguments) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objInvoke = (JCObject)classType.Invoke("Invoke", (Object)expression.getJCOInstance(), (Object[])toObjectFromArray(arguments));
            return new InvocationExpression(objInvoke);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static LabelExpression Label(LabelTarget target) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException {
        try {
            JCObject objLabel = (JCObject)classType.Invoke("Label", (Object)target.getJCOInstance());
            return new LabelExpression(objLabel);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static LabelTarget Label() throws Throwable, system.ArgumentNullException, system.ArgumentException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objLabel = (JCObject)classType.Invoke("Label");
            return new LabelTarget(objLabel);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static LabelTarget Label(java.lang.String name) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objLabel = (JCObject)classType.Invoke("Label", (Object)name);
            return new LabelTarget(objLabel);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static LabelTarget Label(NetType type) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objLabel = (JCObject)classType.Invoke("Label", (Object)type.getJCOInstance());
            return new LabelTarget(objLabel);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static LabelTarget Label(NetType type, java.lang.String name) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.NotImplementedException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.FormatException, system.NotSupportedException {
        try {
            JCObject objLabel = (JCObject)classType.Invoke("Label", (Object)type.getJCOInstance(), (Object)name);
            return new LabelTarget(objLabel);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static LambdaExpression Lambda(Expression body, ParameterExpression... parameters) throws Throwable, system.ArgumentNullException, system.ArgumentOutOfRangeException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objLambda = (JCObject)classType.Invoke("Lambda", (Object)body.getJCOInstance(), (Object[])toObjectFromArray(parameters));
            return new LambdaExpression(objLambda);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static LambdaExpression Lambda(Expression body, boolean tailCall, ParameterExpression... parameters) throws Throwable, system.ArgumentNullException, system.ArgumentOutOfRangeException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objLambda = (JCObject)classType.Invoke("Lambda", (Object)body.getJCOInstance(), tailCall, (Object[])toObjectFromArray(parameters));
            return new LambdaExpression(objLambda);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static LambdaExpression Lambda(NetType delegateType, Expression body, ParameterExpression... parameters) throws Throwable, system.ArgumentNullException, system.ArgumentOutOfRangeException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException, system.FormatException {
        try {
            JCObject objLambda = (JCObject)classType.Invoke("Lambda", (Object)delegateType.getJCOInstance(), (Object)body.getJCOInstance(), (Object[])toObjectFromArray(parameters));
            return new LambdaExpression(objLambda);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static LambdaExpression Lambda(NetType delegateType, Expression body, boolean tailCall, ParameterExpression... parameters) throws Throwable, system.ArgumentNullException, system.ArgumentOutOfRangeException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException, system.FormatException {
        try {
            JCObject objLambda = (JCObject)classType.Invoke("Lambda", (Object)delegateType.getJCOInstance(), (Object)body.getJCOInstance(), tailCall, (Object[])toObjectFromArray(parameters));
            return new LambdaExpression(objLambda);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static NetType GetFuncType(NetType... typeArgs) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.NotImplementedException, system.globalization.CultureNotFoundException, system.IndexOutOfRangeException, system.ArgumentOutOfRangeException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.NotSupportedException {
        try {
            JCObject objGetFuncType = (JCObject)classType.Invoke("GetFuncType", (Object[])toObjectFromArray(typeArgs));
            return new NetType(objGetFuncType);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static NetType GetActionType(NetType... typeArgs) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.NotImplementedException, system.globalization.CultureNotFoundException, system.IndexOutOfRangeException, system.ArgumentOutOfRangeException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.NotSupportedException {
        try {
            JCObject objGetActionType = (JCObject)classType.Invoke("GetActionType", (Object[])toObjectFromArray(typeArgs));
            return new NetType(objGetActionType);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ListInitExpression ListInit(NewExpression newExpression, Expression... initializers) throws Throwable, system.ArgumentNullException, system.ArgumentOutOfRangeException, system.ArgumentException, system.NotImplementedException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.FormatException, system.NotSupportedException {
        try {
            JCObject objListInit = (JCObject)classType.Invoke("ListInit", (Object)newExpression.getJCOInstance(), (Object[])toObjectFromArray(initializers));
            return new ListInitExpression(objListInit);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ListInitExpression ListInit(NewExpression newExpression, MethodInfo addMethod, Expression... initializers) throws Throwable, system.ArgumentNullException, system.ArgumentOutOfRangeException, system.ArgumentException, system.NotImplementedException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.FormatException, system.NotSupportedException {
        try {
            JCObject objListInit = (JCObject)classType.Invoke("ListInit", (Object)newExpression.getJCOInstance(), (Object)addMethod.getJCOInstance(), (Object[])toObjectFromArray(initializers));
            return new ListInitExpression(objListInit);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ListInitExpression ListInit(NewExpression newExpression, ElementInit... initializers) throws Throwable, system.ArgumentNullException, system.ArgumentOutOfRangeException, system.ArgumentException, system.NotImplementedException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.FormatException {
        try {
            JCObject objListInit = (JCObject)classType.Invoke("ListInit", (Object)newExpression.getJCOInstance(), (Object[])toObjectFromArray(initializers));
            return new ListInitExpression(objListInit);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static LoopExpression Loop(Expression body) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException {
        try {
            JCObject objLoop = (JCObject)classType.Invoke("Loop", (Object)body.getJCOInstance());
            return new LoopExpression(objLoop);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static LoopExpression Loop(Expression body, LabelTarget _break) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException {
        try {
            JCObject objLoop = (JCObject)classType.Invoke("Loop", (Object)body.getJCOInstance(), (Object)_break.getJCOInstance());
            return new LoopExpression(objLoop);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MemberAssignment Bind(MethodInfo propertyAccessor, Expression expression) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.NotImplementedException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.FormatException {
        try {
            JCObject objBind = (JCObject)classType.Invoke("Bind", (Object)propertyAccessor.getJCOInstance(), (Object)expression.getJCOInstance());
            return new MemberAssignment(objBind);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MemberExpression Field(Expression expression, NetType type, java.lang.String fieldName) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.NotImplementedException, system.globalization.CultureNotFoundException, system.IndexOutOfRangeException, system.ArgumentOutOfRangeException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException {
        try {
            JCObject objField = (JCObject)classType.Invoke("Field", (Object)expression.getJCOInstance(), (Object)type.getJCOInstance(), (Object)fieldName);
            return new MemberExpression(objField);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MemberExpression Property(Expression expression, NetType type, java.lang.String propertyName) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.NotImplementedException, system.globalization.CultureNotFoundException, system.IndexOutOfRangeException, system.ArgumentOutOfRangeException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException {
        try {
            JCObject objProperty = (JCObject)classType.Invoke("Property", (Object)expression.getJCOInstance(), (Object)type.getJCOInstance(), (Object)propertyName);
            return new MemberExpression(objProperty);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MemberExpression Property(Expression expression, MethodInfo propertyAccessor) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.NotImplementedException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.FormatException {
        try {
            JCObject objProperty = (JCObject)classType.Invoke("Property", (Object)expression.getJCOInstance(), (Object)propertyAccessor.getJCOInstance());
            return new MemberExpression(objProperty);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MemberExpression MakeMemberAccess(Expression expression, MemberInfo member) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.NotImplementedException, system.globalization.CultureNotFoundException, system.IndexOutOfRangeException, system.ArgumentOutOfRangeException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException {
        try {
            JCObject objMakeMemberAccess = (JCObject)classType.Invoke("MakeMemberAccess", (Object)expression.getJCOInstance(), (Object)member.getJCOInstance());
            return new MemberExpression(objMakeMemberAccess);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MemberInitExpression MemberInit(NewExpression newExpression, MemberBinding... bindings) throws Throwable, system.ArgumentNullException, system.ArgumentOutOfRangeException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.IndexOutOfRangeException {
        try {
            JCObject objMemberInit = (JCObject)classType.Invoke("MemberInit", (Object)newExpression.getJCOInstance(), (Object[])toObjectFromArray(bindings));
            return new MemberInitExpression(objMemberInit);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MemberListBinding ListBind(MemberInfo member, ElementInit... initializers) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException {
        try {
            JCObject objListBind = (JCObject)classType.Invoke("ListBind", (Object)member.getJCOInstance(), (Object[])toObjectFromArray(initializers));
            return new MemberListBinding(objListBind);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MemberListBinding ListBind(MethodInfo propertyAccessor, ElementInit... initializers) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException {
        try {
            JCObject objListBind = (JCObject)classType.Invoke("ListBind", (Object)propertyAccessor.getJCOInstance(), (Object[])toObjectFromArray(initializers));
            return new MemberListBinding(objListBind);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MemberMemberBinding MemberBind(MemberInfo member, MemberBinding... bindings) throws Throwable, system.ArgumentNullException, system.ArgumentOutOfRangeException, system.ArgumentException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException, system.IndexOutOfRangeException {
        try {
            JCObject objMemberBind = (JCObject)classType.Invoke("MemberBind", (Object)member.getJCOInstance(), (Object[])toObjectFromArray(bindings));
            return new MemberMemberBinding(objMemberBind);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MemberMemberBinding MemberBind(MethodInfo propertyAccessor, MemberBinding... bindings) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.NotImplementedException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.FormatException {
        try {
            JCObject objMemberBind = (JCObject)classType.Invoke("MemberBind", (Object)propertyAccessor.getJCOInstance(), (Object[])toObjectFromArray(bindings));
            return new MemberMemberBinding(objMemberBind);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodCallExpression Call(MethodInfo method, Expression arg0) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objCall = (JCObject)classType.Invoke("Call", (Object)method.getJCOInstance(), (Object)arg0.getJCOInstance());
            return new MethodCallExpression(objCall);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodCallExpression Call(MethodInfo method, Expression arg0, Expression arg1) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objCall = (JCObject)classType.Invoke("Call", (Object)method.getJCOInstance(), (Object)arg0.getJCOInstance(), (Object)arg1.getJCOInstance());
            return new MethodCallExpression(objCall);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodCallExpression Call(MethodInfo method, Expression arg0, Expression arg1, Expression arg2) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objCall = (JCObject)classType.Invoke("Call", (Object)method.getJCOInstance(), (Object)arg0.getJCOInstance(), (Object)arg1.getJCOInstance(), (Object)arg2.getJCOInstance());
            return new MethodCallExpression(objCall);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodCallExpression Call(MethodInfo method, Expression arg0, Expression arg1, Expression arg2, Expression arg3) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objCall = (JCObject)classType.Invoke("Call", (Object)method.getJCOInstance(), (Object)arg0.getJCOInstance(), (Object)arg1.getJCOInstance(), (Object)arg2.getJCOInstance(), (Object)arg3.getJCOInstance());
            return new MethodCallExpression(objCall);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodCallExpression Call(MethodInfo method, Expression arg0, Expression arg1, Expression arg2, Expression arg3, Expression arg4) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objCall = (JCObject)classType.Invoke("Call", (Object)method.getJCOInstance(), (Object)arg0.getJCOInstance(), (Object)arg1.getJCOInstance(), (Object)arg2.getJCOInstance(), (Object)arg3.getJCOInstance(), (Object)arg4.getJCOInstance());
            return new MethodCallExpression(objCall);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodCallExpression Call(MethodInfo method, Expression... arguments) throws Throwable, system.ArgumentNullException, system.ArgumentOutOfRangeException, system.ArgumentException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objCall = (JCObject)classType.Invoke("Call", (Object)method.getJCOInstance(), (Object[])toObjectFromArray(arguments));
            return new MethodCallExpression(objCall);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodCallExpression Call(Expression instance, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentOutOfRangeException, system.ArgumentException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objCall = (JCObject)classType.Invoke("Call", (Object)instance.getJCOInstance(), (Object)method.getJCOInstance());
            return new MethodCallExpression(objCall);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodCallExpression Call(Expression instance, MethodInfo method, Expression... arguments) throws Throwable, system.ArgumentNullException, system.ArgumentOutOfRangeException, system.ArgumentException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objCall = (JCObject)classType.Invoke("Call", (Object)instance.getJCOInstance(), (Object)method.getJCOInstance(), (Object[])toObjectFromArray(arguments));
            return new MethodCallExpression(objCall);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodCallExpression Call(Expression instance, MethodInfo method, Expression arg0, Expression arg1) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objCall = (JCObject)classType.Invoke("Call", (Object)instance.getJCOInstance(), (Object)method.getJCOInstance(), (Object)arg0.getJCOInstance(), (Object)arg1.getJCOInstance());
            return new MethodCallExpression(objCall);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodCallExpression Call(Expression instance, MethodInfo method, Expression arg0, Expression arg1, Expression arg2) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objCall = (JCObject)classType.Invoke("Call", (Object)instance.getJCOInstance(), (Object)method.getJCOInstance(), (Object)arg0.getJCOInstance(), (Object)arg1.getJCOInstance(), (Object)arg2.getJCOInstance());
            return new MethodCallExpression(objCall);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodCallExpression ArrayIndex(Expression array, Expression... indexes) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objArrayIndex = (JCObject)classType.Invoke("ArrayIndex", (Object)array.getJCOInstance(), (Object[])toObjectFromArray(indexes));
            return new MethodCallExpression(objArrayIndex);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static NewArrayExpression NewArrayInit(NetType type, Expression... initializers) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.NotImplementedException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.FormatException, system.NotSupportedException {
        try {
            JCObject objNewArrayInit = (JCObject)classType.Invoke("NewArrayInit", (Object)type.getJCOInstance(), (Object[])toObjectFromArray(initializers));
            return new NewArrayExpression(objNewArrayInit);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static NewArrayExpression NewArrayBounds(NetType type, Expression... bounds) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.NotImplementedException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.FormatException, system.NotSupportedException {
        try {
            JCObject objNewArrayBounds = (JCObject)classType.Invoke("NewArrayBounds", (Object)type.getJCOInstance(), (Object[])toObjectFromArray(bounds));
            return new NewArrayExpression(objNewArrayBounds);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static NewExpression New(ConstructorInfo constructor) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objNew = (JCObject)classType.Invoke("New", (Object)constructor.getJCOInstance());
            return new NewExpression(objNew);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static NewExpression New(ConstructorInfo constructor, Expression... arguments) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objNew = (JCObject)classType.Invoke("New", (Object)constructor.getJCOInstance(), (Object[])toObjectFromArray(arguments));
            return new NewExpression(objNew);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static NewExpression New(NetType type) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.NotImplementedException, system.globalization.CultureNotFoundException, system.IndexOutOfRangeException, system.ArgumentOutOfRangeException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.NotSupportedException {
        try {
            JCObject objNew = (JCObject)classType.Invoke("New", (Object)type.getJCOInstance());
            return new NewExpression(objNew);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ParameterExpression Parameter(NetType type) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.NotImplementedException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException {
        try {
            JCObject objParameter = (JCObject)classType.Invoke("Parameter", (Object)type.getJCOInstance());
            return new ParameterExpression(objParameter);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ParameterExpression Variable(NetType type) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.NotImplementedException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException {
        try {
            JCObject objVariable = (JCObject)classType.Invoke("Variable", (Object)type.getJCOInstance());
            return new ParameterExpression(objVariable);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ParameterExpression Parameter(NetType type, java.lang.String name) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.NotImplementedException, system.globalization.CultureNotFoundException, system.IndexOutOfRangeException, system.ArgumentOutOfRangeException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException {
        try {
            JCObject objParameter = (JCObject)classType.Invoke("Parameter", (Object)type.getJCOInstance(), (Object)name);
            return new ParameterExpression(objParameter);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ParameterExpression Variable(NetType type, java.lang.String name) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.NotImplementedException, system.globalization.CultureNotFoundException, system.IndexOutOfRangeException, system.ArgumentOutOfRangeException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException {
        try {
            JCObject objVariable = (JCObject)classType.Invoke("Variable", (Object)type.getJCOInstance(), (Object)name);
            return new ParameterExpression(objVariable);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static RuntimeVariablesExpression RuntimeVariables(ParameterExpression... variables) throws Throwable, system.ArgumentNullException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException {
        try {
            JCObject objRuntimeVariables = (JCObject)classType.Invoke("RuntimeVariables", (Object[])toObjectFromArray(variables));
            return new RuntimeVariablesExpression(objRuntimeVariables);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SwitchCase SwitchCase(Expression body, Expression... testValues) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException {
        try {
            JCObject objSwitchCase = (JCObject)classType.Invoke("SwitchCase", (Object)body.getJCOInstance(), (Object[])toObjectFromArray(testValues));
            return new SwitchCase(objSwitchCase);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SwitchExpression Switch(Expression switchValue, SwitchCase... cases) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objSwitch = (JCObject)classType.Invoke("Switch", (Object)switchValue.getJCOInstance(), (Object[])toObjectFromArray(cases));
            return new SwitchExpression(objSwitch);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SwitchExpression Switch(Expression switchValue, Expression defaultBody, SwitchCase... cases) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objSwitch = (JCObject)classType.Invoke("Switch", (Object)switchValue.getJCOInstance(), (Object)defaultBody.getJCOInstance(), (Object[])toObjectFromArray(cases));
            return new SwitchExpression(objSwitch);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SwitchExpression Switch(Expression switchValue, Expression defaultBody, MethodInfo comparison, SwitchCase... cases) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objSwitch = (JCObject)classType.Invoke("Switch", (Object)switchValue.getJCOInstance(), (Object)defaultBody.getJCOInstance(), (Object)comparison.getJCOInstance(), (Object[])toObjectFromArray(cases));
            return new SwitchExpression(objSwitch);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SwitchExpression Switch(NetType type, Expression switchValue, Expression defaultBody, MethodInfo comparison, SwitchCase... cases) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objSwitch = (JCObject)classType.Invoke("Switch", (Object)type.getJCOInstance(), (Object)switchValue.getJCOInstance(), (Object)defaultBody.getJCOInstance(), (Object)comparison.getJCOInstance(), (Object[])toObjectFromArray(cases));
            return new SwitchExpression(objSwitch);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SymbolDocumentInfo SymbolDocument(java.lang.String fileName) throws Throwable, system.ArgumentNullException {
        try {
            JCObject objSymbolDocument = (JCObject)classType.Invoke("SymbolDocument", (Object)fileName);
            return new SymbolDocumentInfo(objSymbolDocument);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SymbolDocumentInfo SymbolDocument(java.lang.String fileName, Guid language) throws Throwable, system.ArgumentNullException {
        try {
            JCObject objSymbolDocument = (JCObject)classType.Invoke("SymbolDocument", (Object)fileName, (Object)language.getJCOInstance());
            return new SymbolDocumentInfo(objSymbolDocument);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SymbolDocumentInfo SymbolDocument(java.lang.String fileName, Guid language, Guid languageVendor) throws Throwable, system.ArgumentNullException {
        try {
            JCObject objSymbolDocument = (JCObject)classType.Invoke("SymbolDocument", (Object)fileName, (Object)language.getJCOInstance(), (Object)languageVendor.getJCOInstance());
            return new SymbolDocumentInfo(objSymbolDocument);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SymbolDocumentInfo SymbolDocument(java.lang.String fileName, Guid language, Guid languageVendor, Guid documentType) throws Throwable, system.ArgumentNullException {
        try {
            JCObject objSymbolDocument = (JCObject)classType.Invoke("SymbolDocument", (Object)fileName, (Object)language.getJCOInstance(), (Object)languageVendor.getJCOInstance(), (Object)documentType.getJCOInstance());
            return new SymbolDocumentInfo(objSymbolDocument);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static TryExpression TryFault(Expression body, Expression fault) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException {
        try {
            JCObject objTryFault = (JCObject)classType.Invoke("TryFault", (Object)body.getJCOInstance(), (Object)fault.getJCOInstance());
            return new TryExpression(objTryFault);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static TryExpression TryFinally(Expression body, Expression _finally) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException {
        try {
            JCObject objTryFinally = (JCObject)classType.Invoke("TryFinally", (Object)body.getJCOInstance(), (Object)_finally.getJCOInstance());
            return new TryExpression(objTryFinally);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static TryExpression TryCatch(Expression body, CatchBlock... handlers) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException {
        try {
            JCObject objTryCatch = (JCObject)classType.Invoke("TryCatch", (Object)body.getJCOInstance(), (Object[])toObjectFromArray(handlers));
            return new TryExpression(objTryCatch);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static TryExpression TryCatchFinally(Expression body, Expression _finally, CatchBlock... handlers) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException {
        try {
            JCObject objTryCatchFinally = (JCObject)classType.Invoke("TryCatchFinally", (Object)body.getJCOInstance(), (Object)_finally.getJCOInstance(), (Object[])toObjectFromArray(handlers));
            return new TryExpression(objTryCatchFinally);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression MakeUnary(ExpressionType unaryType, Expression operand, NetType type) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objMakeUnary = (JCObject)classType.Invoke("MakeUnary", (Object)unaryType.getJCOInstance(), (Object)operand.getJCOInstance(), (Object)type.getJCOInstance());
            return new UnaryExpression(objMakeUnary);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression MakeUnary(ExpressionType unaryType, Expression operand, NetType type, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objMakeUnary = (JCObject)classType.Invoke("MakeUnary", (Object)unaryType.getJCOInstance(), (Object)operand.getJCOInstance(), (Object)type.getJCOInstance(), (Object)method.getJCOInstance());
            return new UnaryExpression(objMakeUnary);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression Negate(Expression expression) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objNegate = (JCObject)classType.Invoke("Negate", (Object)expression.getJCOInstance());
            return new UnaryExpression(objNegate);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression UnaryPlus(Expression expression) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objUnaryPlus = (JCObject)classType.Invoke("UnaryPlus", (Object)expression.getJCOInstance());
            return new UnaryExpression(objUnaryPlus);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression NegateChecked(Expression expression) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objNegateChecked = (JCObject)classType.Invoke("NegateChecked", (Object)expression.getJCOInstance());
            return new UnaryExpression(objNegateChecked);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression Not(Expression expression) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objNot = (JCObject)classType.Invoke("Not", (Object)expression.getJCOInstance());
            return new UnaryExpression(objNot);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression IsFalse(Expression expression) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objIsFalse = (JCObject)classType.Invoke("IsFalse", (Object)expression.getJCOInstance());
            return new UnaryExpression(objIsFalse);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression IsTrue(Expression expression) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objIsTrue = (JCObject)classType.Invoke("IsTrue", (Object)expression.getJCOInstance());
            return new UnaryExpression(objIsTrue);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression OnesComplement(Expression expression) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objOnesComplement = (JCObject)classType.Invoke("OnesComplement", (Object)expression.getJCOInstance());
            return new UnaryExpression(objOnesComplement);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression Convert(Expression expression, NetType type) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objConvert = (JCObject)classType.Invoke("Convert", (Object)expression.getJCOInstance(), (Object)type.getJCOInstance());
            return new UnaryExpression(objConvert);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression ConvertChecked(Expression expression, NetType type) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objConvertChecked = (JCObject)classType.Invoke("ConvertChecked", (Object)expression.getJCOInstance(), (Object)type.getJCOInstance());
            return new UnaryExpression(objConvertChecked);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression ArrayLength(Expression array) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.NotImplementedException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.FormatException, system.NotSupportedException {
        try {
            JCObject objArrayLength = (JCObject)classType.Invoke("ArrayLength", (Object)array.getJCOInstance());
            return new UnaryExpression(objArrayLength);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression Rethrow() throws Throwable, system.ArgumentNullException, system.ArgumentException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objRethrow = (JCObject)classType.Invoke("Rethrow");
            return new UnaryExpression(objRethrow);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression Rethrow(NetType type) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objRethrow = (JCObject)classType.Invoke("Rethrow", (Object)type.getJCOInstance());
            return new UnaryExpression(objRethrow);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression Throw(Expression value) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objThrow = (JCObject)classType.Invoke("Throw", (Object)value.getJCOInstance());
            return new UnaryExpression(objThrow);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression Increment(Expression expression) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objIncrement = (JCObject)classType.Invoke("Increment", (Object)expression.getJCOInstance());
            return new UnaryExpression(objIncrement);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression Decrement(Expression expression) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objDecrement = (JCObject)classType.Invoke("Decrement", (Object)expression.getJCOInstance());
            return new UnaryExpression(objDecrement);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression PreIncrementAssign(Expression expression) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objPreIncrementAssign = (JCObject)classType.Invoke("PreIncrementAssign", (Object)expression.getJCOInstance());
            return new UnaryExpression(objPreIncrementAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression PreIncrementAssign(Expression expression, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objPreIncrementAssign = (JCObject)classType.Invoke("PreIncrementAssign", (Object)expression.getJCOInstance(), (Object)method.getJCOInstance());
            return new UnaryExpression(objPreIncrementAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression PreDecrementAssign(Expression expression) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objPreDecrementAssign = (JCObject)classType.Invoke("PreDecrementAssign", (Object)expression.getJCOInstance());
            return new UnaryExpression(objPreDecrementAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression PreDecrementAssign(Expression expression, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objPreDecrementAssign = (JCObject)classType.Invoke("PreDecrementAssign", (Object)expression.getJCOInstance(), (Object)method.getJCOInstance());
            return new UnaryExpression(objPreDecrementAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression PostIncrementAssign(Expression expression) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objPostIncrementAssign = (JCObject)classType.Invoke("PostIncrementAssign", (Object)expression.getJCOInstance());
            return new UnaryExpression(objPostIncrementAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression PostIncrementAssign(Expression expression, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objPostIncrementAssign = (JCObject)classType.Invoke("PostIncrementAssign", (Object)expression.getJCOInstance(), (Object)method.getJCOInstance());
            return new UnaryExpression(objPostIncrementAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression PostDecrementAssign(Expression expression) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objPostDecrementAssign = (JCObject)classType.Invoke("PostDecrementAssign", (Object)expression.getJCOInstance());
            return new UnaryExpression(objPostDecrementAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression PostDecrementAssign(Expression expression, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NotImplementedException {
        try {
            JCObject objPostDecrementAssign = (JCObject)classType.Invoke("PostDecrementAssign", (Object)expression.getJCOInstance(), (Object)method.getJCOInstance());
            return new UnaryExpression(objPostDecrementAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression Assign(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objAssign = (JCObject)classType.Invoke("Assign", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression ReferenceEqual(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException {
        try {
            JCObject objReferenceEqual = (JCObject)classType.Invoke("ReferenceEqual", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objReferenceEqual);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression NotEqual(Expression left, Expression right, boolean liftToNull, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objNotEqual = (JCObject)classType.Invoke("NotEqual", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), liftToNull, (Object)method.getJCOInstance());
            return new BinaryExpression(objNotEqual);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression ReferenceNotEqual(Expression left, Expression right) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException {
        try {
            JCObject objReferenceNotEqual = (JCObject)classType.Invoke("ReferenceNotEqual", (Object)left.getJCOInstance(), (Object)right.getJCOInstance());
            return new BinaryExpression(objReferenceNotEqual);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression LessThan(Expression left, Expression right, boolean liftToNull, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objLessThan = (JCObject)classType.Invoke("LessThan", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), liftToNull, (Object)method.getJCOInstance());
            return new BinaryExpression(objLessThan);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression GreaterThanOrEqual(Expression left, Expression right, boolean liftToNull, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objGreaterThanOrEqual = (JCObject)classType.Invoke("GreaterThanOrEqual", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), liftToNull, (Object)method.getJCOInstance());
            return new BinaryExpression(objGreaterThanOrEqual);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression AndAlso(Expression left, Expression right, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objAndAlso = (JCObject)classType.Invoke("AndAlso", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance());
            return new BinaryExpression(objAndAlso);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression OrElse(Expression left, Expression right, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objOrElse = (JCObject)classType.Invoke("OrElse", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance());
            return new BinaryExpression(objOrElse);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression Coalesce(Expression left, Expression right, LambdaExpression conversion) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objCoalesce = (JCObject)classType.Invoke("Coalesce", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)conversion.getJCOInstance());
            return new BinaryExpression(objCoalesce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression AddAssign(Expression left, Expression right, MethodInfo method, LambdaExpression conversion) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objAddAssign = (JCObject)classType.Invoke("AddAssign", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance(), (Object)conversion.getJCOInstance());
            return new BinaryExpression(objAddAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression AddAssignChecked(Expression left, Expression right, MethodInfo method, LambdaExpression conversion) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objAddAssignChecked = (JCObject)classType.Invoke("AddAssignChecked", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance(), (Object)conversion.getJCOInstance());
            return new BinaryExpression(objAddAssignChecked);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression AddChecked(Expression left, Expression right, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objAddChecked = (JCObject)classType.Invoke("AddChecked", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance());
            return new BinaryExpression(objAddChecked);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression Subtract(Expression left, Expression right, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objSubtract = (JCObject)classType.Invoke("Subtract", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance());
            return new BinaryExpression(objSubtract);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression SubtractAssign(Expression left, Expression right, MethodInfo method, LambdaExpression conversion) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objSubtractAssign = (JCObject)classType.Invoke("SubtractAssign", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance(), (Object)conversion.getJCOInstance());
            return new BinaryExpression(objSubtractAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression SubtractAssignChecked(Expression left, Expression right, MethodInfo method, LambdaExpression conversion) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objSubtractAssignChecked = (JCObject)classType.Invoke("SubtractAssignChecked", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance(), (Object)conversion.getJCOInstance());
            return new BinaryExpression(objSubtractAssignChecked);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression SubtractChecked(Expression left, Expression right, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objSubtractChecked = (JCObject)classType.Invoke("SubtractChecked", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance());
            return new BinaryExpression(objSubtractChecked);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression Divide(Expression left, Expression right, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objDivide = (JCObject)classType.Invoke("Divide", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance());
            return new BinaryExpression(objDivide);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression DivideAssign(Expression left, Expression right, MethodInfo method, LambdaExpression conversion) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objDivideAssign = (JCObject)classType.Invoke("DivideAssign", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance(), (Object)conversion.getJCOInstance());
            return new BinaryExpression(objDivideAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression Modulo(Expression left, Expression right, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objModulo = (JCObject)classType.Invoke("Modulo", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance());
            return new BinaryExpression(objModulo);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression ModuloAssign(Expression left, Expression right, MethodInfo method, LambdaExpression conversion) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objModuloAssign = (JCObject)classType.Invoke("ModuloAssign", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance(), (Object)conversion.getJCOInstance());
            return new BinaryExpression(objModuloAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression Multiply(Expression left, Expression right, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objMultiply = (JCObject)classType.Invoke("Multiply", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance());
            return new BinaryExpression(objMultiply);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression MultiplyAssign(Expression left, Expression right, MethodInfo method, LambdaExpression conversion) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objMultiplyAssign = (JCObject)classType.Invoke("MultiplyAssign", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance(), (Object)conversion.getJCOInstance());
            return new BinaryExpression(objMultiplyAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression MultiplyAssignChecked(Expression left, Expression right, MethodInfo method, LambdaExpression conversion) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objMultiplyAssignChecked = (JCObject)classType.Invoke("MultiplyAssignChecked", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance(), (Object)conversion.getJCOInstance());
            return new BinaryExpression(objMultiplyAssignChecked);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression MultiplyChecked(Expression left, Expression right, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objMultiplyChecked = (JCObject)classType.Invoke("MultiplyChecked", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance());
            return new BinaryExpression(objMultiplyChecked);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression LeftShift(Expression left, Expression right, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objLeftShift = (JCObject)classType.Invoke("LeftShift", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance());
            return new BinaryExpression(objLeftShift);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression LeftShiftAssign(Expression left, Expression right, MethodInfo method, LambdaExpression conversion) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objLeftShiftAssign = (JCObject)classType.Invoke("LeftShiftAssign", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance(), (Object)conversion.getJCOInstance());
            return new BinaryExpression(objLeftShiftAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression RightShift(Expression left, Expression right, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objRightShift = (JCObject)classType.Invoke("RightShift", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance());
            return new BinaryExpression(objRightShift);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression RightShiftAssign(Expression left, Expression right, MethodInfo method, LambdaExpression conversion) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objRightShiftAssign = (JCObject)classType.Invoke("RightShiftAssign", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance(), (Object)conversion.getJCOInstance());
            return new BinaryExpression(objRightShiftAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression And(Expression left, Expression right, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objAnd = (JCObject)classType.Invoke("And", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance());
            return new BinaryExpression(objAnd);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression AndAssign(Expression left, Expression right, MethodInfo method, LambdaExpression conversion) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objAndAssign = (JCObject)classType.Invoke("AndAssign", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance(), (Object)conversion.getJCOInstance());
            return new BinaryExpression(objAndAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression Or(Expression left, Expression right, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objOr = (JCObject)classType.Invoke("Or", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance());
            return new BinaryExpression(objOr);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression OrAssign(Expression left, Expression right, MethodInfo method, LambdaExpression conversion) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objOrAssign = (JCObject)classType.Invoke("OrAssign", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance(), (Object)conversion.getJCOInstance());
            return new BinaryExpression(objOrAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression ExclusiveOr(Expression left, Expression right, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objExclusiveOr = (JCObject)classType.Invoke("ExclusiveOr", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance());
            return new BinaryExpression(objExclusiveOr);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression ExclusiveOrAssign(Expression left, Expression right, MethodInfo method, LambdaExpression conversion) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objExclusiveOrAssign = (JCObject)classType.Invoke("ExclusiveOrAssign", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance(), (Object)conversion.getJCOInstance());
            return new BinaryExpression(objExclusiveOrAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression Power(Expression left, Expression right, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objPower = (JCObject)classType.Invoke("Power", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance());
            return new BinaryExpression(objPower);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression PowerAssign(Expression left, Expression right, MethodInfo method, LambdaExpression conversion) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objPowerAssign = (JCObject)classType.Invoke("PowerAssign", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance(), (Object)conversion.getJCOInstance());
            return new BinaryExpression(objPowerAssign);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression ArrayIndex(Expression array, Expression index) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objArrayIndex = (JCObject)classType.Invoke("ArrayIndex", (Object)array.getJCOInstance(), (Object)index.getJCOInstance());
            return new BinaryExpression(objArrayIndex);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BlockExpression Block(Expression arg0, Expression arg1) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException {
        try {
            JCObject objBlock = (JCObject)classType.Invoke("Block", (Object)arg0.getJCOInstance(), (Object)arg1.getJCOInstance());
            return new BlockExpression(objBlock);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BlockExpression Block(Expression arg0, Expression arg1, Expression arg2) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException {
        try {
            JCObject objBlock = (JCObject)classType.Invoke("Block", (Object)arg0.getJCOInstance(), (Object)arg1.getJCOInstance(), (Object)arg2.getJCOInstance());
            return new BlockExpression(objBlock);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BlockExpression Block(Expression arg0, Expression arg1, Expression arg2, Expression arg3) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException {
        try {
            JCObject objBlock = (JCObject)classType.Invoke("Block", (Object)arg0.getJCOInstance(), (Object)arg1.getJCOInstance(), (Object)arg2.getJCOInstance(), (Object)arg3.getJCOInstance());
            return new BlockExpression(objBlock);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BlockExpression Block(Expression arg0, Expression arg1, Expression arg2, Expression arg3, Expression arg4) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException {
        try {
            JCObject objBlock = (JCObject)classType.Invoke("Block", (Object)arg0.getJCOInstance(), (Object)arg1.getJCOInstance(), (Object)arg2.getJCOInstance(), (Object)arg3.getJCOInstance(), (Object)arg4.getJCOInstance());
            return new BlockExpression(objBlock);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BlockExpression Block(Expression... expressions) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException {
        try {
            JCObject objBlock = (JCObject)classType.Invoke("Block", (Object[])toObjectFromArray(expressions));
            return new BlockExpression(objBlock);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static CatchBlock MakeCatchBlock(NetType type, ParameterExpression variable, Expression body, Expression filter) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.NotImplementedException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.FormatException {
        try {
            JCObject objMakeCatchBlock = (JCObject)classType.Invoke("MakeCatchBlock", (Object)type.getJCOInstance(), (Object)variable.getJCOInstance(), (Object)body.getJCOInstance(), (Object)filter.getJCOInstance());
            return new CatchBlock(objMakeCatchBlock);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ConditionalExpression Condition(Expression test, Expression ifTrue, Expression ifFalse) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException {
        try {
            JCObject objCondition = (JCObject)classType.Invoke("Condition", (Object)test.getJCOInstance(), (Object)ifTrue.getJCOInstance(), (Object)ifFalse.getJCOInstance());
            return new ConditionalExpression(objCondition);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ConditionalExpression Condition(Expression test, Expression ifTrue, Expression ifFalse, NetType type) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException {
        try {
            JCObject objCondition = (JCObject)classType.Invoke("Condition", (Object)test.getJCOInstance(), (Object)ifTrue.getJCOInstance(), (Object)ifFalse.getJCOInstance(), (Object)type.getJCOInstance());
            return new ConditionalExpression(objCondition);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DynamicExpression Dynamic(CallSiteBinder binder, NetType returnType, Expression arg0) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NullReferenceException {
        try {
            JCObject objDynamic = (JCObject)classType.Invoke("Dynamic", (Object)binder.getJCOInstance(), (Object)returnType.getJCOInstance(), (Object)arg0.getJCOInstance());
            return new DynamicExpression(objDynamic);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DynamicExpression Dynamic(CallSiteBinder binder, NetType returnType, Expression arg0, Expression arg1) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NullReferenceException {
        try {
            JCObject objDynamic = (JCObject)classType.Invoke("Dynamic", (Object)binder.getJCOInstance(), (Object)returnType.getJCOInstance(), (Object)arg0.getJCOInstance(), (Object)arg1.getJCOInstance());
            return new DynamicExpression(objDynamic);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DynamicExpression Dynamic(CallSiteBinder binder, NetType returnType, Expression arg0, Expression arg1, Expression arg2) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NullReferenceException {
        try {
            JCObject objDynamic = (JCObject)classType.Invoke("Dynamic", (Object)binder.getJCOInstance(), (Object)returnType.getJCOInstance(), (Object)arg0.getJCOInstance(), (Object)arg1.getJCOInstance(), (Object)arg2.getJCOInstance());
            return new DynamicExpression(objDynamic);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DynamicExpression Dynamic(CallSiteBinder binder, NetType returnType, Expression arg0, Expression arg1, Expression arg2, Expression arg3) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.NullReferenceException {
        try {
            JCObject objDynamic = (JCObject)classType.Invoke("Dynamic", (Object)binder.getJCOInstance(), (Object)returnType.getJCOInstance(), (Object)arg0.getJCOInstance(), (Object)arg1.getJCOInstance(), (Object)arg2.getJCOInstance(), (Object)arg3.getJCOInstance());
            return new DynamicExpression(objDynamic);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static GotoExpression MakeGoto(GotoExpressionKind kind, LabelTarget target, Expression value, NetType type) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.NotImplementedException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException {
        try {
            JCObject objMakeGoto = (JCObject)classType.Invoke("MakeGoto", (Object)kind.getJCOInstance(), (Object)target.getJCOInstance(), (Object)value.getJCOInstance(), (Object)type.getJCOInstance());
            return new GotoExpression(objMakeGoto);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static IndexExpression Property(Expression instance, java.lang.String propertyName, Expression... arguments) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.OutOfMemoryException {
        try {
            JCObject objProperty = (JCObject)classType.Invoke("Property", (Object)instance.getJCOInstance(), (Object)propertyName, (Object[])toObjectFromArray(arguments));
            return new IndexExpression(objProperty);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static LabelExpression Label(LabelTarget target, Expression defaultValue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.NotImplementedException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException {
        try {
            JCObject objLabel = (JCObject)classType.Invoke("Label", (Object)target.getJCOInstance(), (Object)defaultValue.getJCOInstance());
            return new LabelExpression(objLabel);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static NetType GetDelegateType(NetType... typeArgs) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.NotImplementedException, system.globalization.CultureNotFoundException, system.IndexOutOfRangeException, system.ArgumentOutOfRangeException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.NotSupportedException, system.TypeLoadException, system.NullReferenceException {
        try {
            JCObject objGetDelegateType = (JCObject)classType.Invoke("GetDelegateType", (Object[])toObjectFromArray(typeArgs));
            return new NetType(objGetDelegateType);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static LoopExpression Loop(Expression body, LabelTarget _break, LabelTarget _continue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException {
        try {
            JCObject objLoop = (JCObject)classType.Invoke("Loop", (Object)body.getJCOInstance(), (Object)_break.getJCOInstance(), (Object)_continue.getJCOInstance());
            return new LoopExpression(objLoop);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MemberAssignment Bind(MemberInfo member, Expression expression) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException {
        try {
            JCObject objBind = (JCObject)classType.Invoke("Bind", (Object)member.getJCOInstance(), (Object)expression.getJCOInstance());
            return new MemberAssignment(objBind);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MemberExpression Field(Expression expression, java.lang.String fieldName) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException {
        try {
            JCObject objField = (JCObject)classType.Invoke("Field", (Object)expression.getJCOInstance(), (Object)fieldName);
            return new MemberExpression(objField);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MemberExpression Property(Expression expression, java.lang.String propertyName) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException {
        try {
            JCObject objProperty = (JCObject)classType.Invoke("Property", (Object)expression.getJCOInstance(), (Object)propertyName);
            return new MemberExpression(objProperty);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MemberExpression PropertyOrField(Expression expression, java.lang.String propertyOrFieldName) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException {
        try {
            JCObject objPropertyOrField = (JCObject)classType.Invoke("PropertyOrField", (Object)expression.getJCOInstance(), (Object)propertyOrFieldName);
            return new MemberExpression(objPropertyOrField);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodCallExpression Call(Expression instance, java.lang.String methodName, NetType[] typeArguments, Expression... arguments) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.NotImplementedException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.FormatException, system.NotSupportedException {
        try {
            JCObject objCall = (JCObject)classType.Invoke("Call", (Object)instance.getJCOInstance(), (Object)methodName, (Object)toObjectFromArray(typeArguments), (Object[])toObjectFromArray(arguments));
            return new MethodCallExpression(objCall);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodCallExpression Call(NetType type, java.lang.String methodName, NetType[] typeArguments, Expression... arguments) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.NotImplementedException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.FormatException, system.NotSupportedException {
        try {
            JCObject objCall = (JCObject)classType.Invoke("Call", (Object)type.getJCOInstance(), (Object)methodName, (Object)toObjectFromArray(typeArguments), (Object[])toObjectFromArray(arguments));
            return new MethodCallExpression(objCall);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static TypeBinaryExpression TypeIs(Expression expression, NetType type) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException {
        try {
            JCObject objTypeIs = (JCObject)classType.Invoke("TypeIs", (Object)expression.getJCOInstance(), (Object)type.getJCOInstance());
            return new TypeBinaryExpression(objTypeIs);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static TypeBinaryExpression TypeEqual(Expression expression, NetType type) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException {
        try {
            JCObject objTypeEqual = (JCObject)classType.Invoke("TypeEqual", (Object)expression.getJCOInstance(), (Object)type.getJCOInstance());
            return new TypeBinaryExpression(objTypeEqual);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression Negate(Expression expression, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objNegate = (JCObject)classType.Invoke("Negate", (Object)expression.getJCOInstance(), (Object)method.getJCOInstance());
            return new UnaryExpression(objNegate);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression UnaryPlus(Expression expression, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objUnaryPlus = (JCObject)classType.Invoke("UnaryPlus", (Object)expression.getJCOInstance(), (Object)method.getJCOInstance());
            return new UnaryExpression(objUnaryPlus);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression NegateChecked(Expression expression, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objNegateChecked = (JCObject)classType.Invoke("NegateChecked", (Object)expression.getJCOInstance(), (Object)method.getJCOInstance());
            return new UnaryExpression(objNegateChecked);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression IsFalse(Expression expression, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objIsFalse = (JCObject)classType.Invoke("IsFalse", (Object)expression.getJCOInstance(), (Object)method.getJCOInstance());
            return new UnaryExpression(objIsFalse);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression IsTrue(Expression expression, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objIsTrue = (JCObject)classType.Invoke("IsTrue", (Object)expression.getJCOInstance(), (Object)method.getJCOInstance());
            return new UnaryExpression(objIsTrue);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression OnesComplement(Expression expression, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objOnesComplement = (JCObject)classType.Invoke("OnesComplement", (Object)expression.getJCOInstance(), (Object)method.getJCOInstance());
            return new UnaryExpression(objOnesComplement);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression TypeAs(Expression expression, NetType type) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objTypeAs = (JCObject)classType.Invoke("TypeAs", (Object)expression.getJCOInstance(), (Object)type.getJCOInstance());
            return new UnaryExpression(objTypeAs);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression Unbox(Expression expression, NetType type) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objUnbox = (JCObject)classType.Invoke("Unbox", (Object)expression.getJCOInstance(), (Object)type.getJCOInstance());
            return new UnaryExpression(objUnbox);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression ConvertChecked(Expression expression, NetType type, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objConvertChecked = (JCObject)classType.Invoke("ConvertChecked", (Object)expression.getJCOInstance(), (Object)type.getJCOInstance(), (Object)method.getJCOInstance());
            return new UnaryExpression(objConvertChecked);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression Quote(Expression expression) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException {
        try {
            JCObject objQuote = (JCObject)classType.Invoke("Quote", (Object)expression.getJCOInstance());
            return new UnaryExpression(objQuote);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression Throw(Expression value, NetType type) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.NotImplementedException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.FormatException, system.NotSupportedException {
        try {
            JCObject objThrow = (JCObject)classType.Invoke("Throw", (Object)value.getJCOInstance(), (Object)type.getJCOInstance());
            return new UnaryExpression(objThrow);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression Increment(Expression expression, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objIncrement = (JCObject)classType.Invoke("Increment", (Object)expression.getJCOInstance(), (Object)method.getJCOInstance());
            return new UnaryExpression(objIncrement);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression Decrement(Expression expression, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objDecrement = (JCObject)classType.Invoke("Decrement", (Object)expression.getJCOInstance(), (Object)method.getJCOInstance());
            return new UnaryExpression(objDecrement);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression Equal(Expression left, Expression right, boolean liftToNull, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objEqual = (JCObject)classType.Invoke("Equal", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), liftToNull, (Object)method.getJCOInstance());
            return new BinaryExpression(objEqual);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression GreaterThan(Expression left, Expression right, boolean liftToNull, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objGreaterThan = (JCObject)classType.Invoke("GreaterThan", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), liftToNull, (Object)method.getJCOInstance());
            return new BinaryExpression(objGreaterThan);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression LessThanOrEqual(Expression left, Expression right, boolean liftToNull, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objLessThanOrEqual = (JCObject)classType.Invoke("LessThanOrEqual", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), liftToNull, (Object)method.getJCOInstance());
            return new BinaryExpression(objLessThanOrEqual);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BinaryExpression Add(Expression left, Expression right, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objAdd = (JCObject)classType.Invoke("Add", (Object)left.getJCOInstance(), (Object)right.getJCOInstance(), (Object)method.getJCOInstance());
            return new BinaryExpression(objAdd);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MemberExpression Field(Expression expression, FieldInfo field) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.MissingMethodException, system.reflection.TargetInvocationException, system.NotImplementedException, system.ArgumentOutOfRangeException, system.globalization.CultureNotFoundException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.IndexOutOfRangeException {
        try {
            JCObject objField = (JCObject)classType.Invoke("Field", (Object)expression.getJCOInstance(), (Object)field.getJCOInstance());
            return new MemberExpression(objField);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MemberExpression Property(Expression expression, PropertyInfo property) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.NotImplementedException, system.globalization.CultureNotFoundException, system.IndexOutOfRangeException, system.ArgumentOutOfRangeException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.InvalidOperationException {
        try {
            JCObject objProperty = (JCObject)classType.Invoke("Property", (Object)expression.getJCOInstance(), (Object)property.getJCOInstance());
            return new MemberExpression(objProperty);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression Not(Expression expression, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objNot = (JCObject)classType.Invoke("Not", (Object)expression.getJCOInstance(), (Object)method.getJCOInstance());
            return new UnaryExpression(objNot);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UnaryExpression Convert(Expression expression, NetType type, MethodInfo method) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException {
        try {
            JCObject objConvert = (JCObject)classType.Invoke("Convert", (Object)expression.getJCOInstance(), (Object)type.getJCOInstance(), (Object)method.getJCOInstance());
            return new UnaryExpression(objConvert);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }


    
    // Properties section
    
    
    public ExpressionType getNodeType() throws Throwable {
        try {
            JCObject val = (JCObject)classInstance.Get("NodeType");
            return new ExpressionType(val);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public NetType getType() throws Throwable {
        try {
            JCObject val = (JCObject)classInstance.Get("Type");
            return new NetType(val);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean getCanReduce() throws Throwable {
        try {
            return (boolean)classInstance.Get("CanReduce");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }



	// Instance Events section
    
    
}